/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.inverstmentAdminRole;

import ui.FinanceAdminRole.*;
import Business.Employee.Accountant;
import Business.Employee.Employee;
import Business.Employee.Landlord;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Role.LandlordRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yiningchen
 */
public class ManageEmployeeJPanel extends javax.swing.JPanel {

    private OrganizationDirectory organizationDir;
    private JPanel userProcessContainer;

    /**
     * Creates new form ManageEmployeeJPanel
     */
    public ManageEmployeeJPanel(JPanel userProcessContainer, OrganizationDirectory organizationDir) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDir = organizationDir;
        populateOrganizationComboBox();
        Organization organization = (Organization) organizationCombox.getSelectedItem();
    }

    public void populateOrganizationComboBox() {
        organizationCombox.removeAllItems();

        for (Organization organization : organizationDir.getOrganizationList()) {
            organizationCombox.addItem(organization);
        }
    }

    private void populatelandlordTable(Organization organization) {
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();

        model.setRowCount(0);

        for (Landlord landlord : organization.getLandlordDirectory().getlandlordList()) {
            Object[] row = new Object[5];
            row[0] = landlord.getId();
            row[1] = landlord.getFirstname();
            row[2] = landlord.getLastname();
            row[3] = landlord.getEmail();
            row[4] = landlord.getSSN();
            model.addRow(row);
        }
    }

    private boolean emailPatternCorrect() {
        Pattern p = Pattern.compile("^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        Matcher m = p.matcher(txtemail.getText());
        boolean b = m.matches();
        return b;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addJButton = new javax.swing.JButton();
        organizationCombox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        txtemail = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtlastname = new javax.swing.JTextField();
        txtSSN = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtpassword = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setLayout(null);

        addJButton.setText("Create Landlord");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton);
        addJButton.setBounds(347, 454, 143, 29);

        organizationCombox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationCombox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationComboxActionPerformed(evt);
            }
        });
        add(organizationCombox);
        organizationCombox.setBounds(380, 19, 127, 27);

        jLabel1.setText("Organization");
        add(jLabel1);
        jLabel1.setBounds(266, 23, 81, 16);

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton);
        backJButton.setBounds(211, 454, 97, 29);

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Firstname", "Lastname", "email", "SSN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);
        if (organizationJTable.getColumnModel().getColumnCount() > 0) {
            organizationJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(137, 72, 480, 92);

        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });
        add(txtemail);
        txtemail.setBounds(345, 318, 126, 26);

        jLabel4.setText("email");
        add(jLabel4);
        jLabel4.setBounds(251, 323, 34, 16);

        txtlastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlastnameActionPerformed(evt);
            }
        });
        add(txtlastname);
        txtlastname.setBounds(345, 258, 126, 26);

        txtSSN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSSNActionPerformed(evt);
            }
        });
        add(txtSSN);
        txtSSN.setBounds(345, 367, 126, 26);

        jLabel5.setText("Full name");
        add(jLabel5);
        jLabel5.setBounds(251, 268, 61, 16);

        jLabel6.setText("SSN");
        add(jLabel6);
        jLabel6.setBounds(251, 372, 24, 16);

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });
        add(txtUsername);
        txtUsername.setBounds(345, 192, 126, 26);
        add(txtpassword);
        txtpassword.setBounds(345, 410, 126, 26);

        jLabel7.setText("Username");
        add(jLabel7);
        jLabel7.setBounds(251, 197, 62, 16);

        jLabel8.setText("password");
        add(jLabel8);
        jLabel8.setBounds(251, 415, 60, 16);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete);
        btnDelete.setBounds(653, 72, 84, 29);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.jpg"))); // NOI18N
        jLabel9.setText("jLabel4");
        add(jLabel9);
        jLabel9.setBounds(5, -4, 930, 710);
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed

        Organization organization = (Organization) organizationCombox.getSelectedItem();
        //JOptionPane.showMessageDialog(null, organizationCombox.getSelectedItem().toString());
        String email = txtemail.getText();
        String lastname = txtlastname.getText();
        String SSN = txtSSN.getText();
        String password = txtpassword.getText();
        String Username = txtUsername.getText();
        if (password.equals("") || Username.equals("") || email.equals("") || SSN.equals("") || lastname.equals("")) {
            JOptionPane.showMessageDialog(null, "Input can not be empty", "Warning", JOptionPane.ERROR_MESSAGE);
        } else if (!organization.getUserAccountDirectory().checkIfUsernameIsUnique(Username)) {
            JOptionPane.showMessageDialog(null, "Username must be unique", "Warning", JOptionPane.ERROR_MESSAGE);
        } else if (!emailPatternCorrect()) {
            txtemail.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel4.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Please enter valid Username in the format of xx@xx.xx", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {
            Landlord landlord = organization.getLandlordDirectory().createLandlord(Username, lastname, email, SSN);
            organization.getUserAccountDirectory().createUserAccount(Username, password, landlord, new LandlordRole());
            JOptionPane.showMessageDialog(null, "landlord created");
            populatelandlordTable(organization);
            txtemail.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            jLabel4.setForeground(Color.BLACK);
        }

    }//GEN-LAST:event_addJButtonActionPerformed

    private void organizationComboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationComboxActionPerformed
        Organization organization = (Organization) organizationCombox.getSelectedItem();
        if (organization != null) {
            populatelandlordTable(organization);
        }
    }//GEN-LAST:event_organizationComboxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backJButtonActionPerformed

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void txtlastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlastnameActionPerformed

    private void txtSSNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSSNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSSNActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:

        int row = organizationJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!", "get Request", JOptionPane.ERROR_MESSAGE);
        } else {
            String name = organizationJTable.getValueAt(row, 1).toString();

            Organization organization = (Organization) organizationCombox.getSelectedItem();

            //find cleaningstaff via user name
            Landlord landlord = organization.getLandlordDirectory().findlandlord(name);

            //remove this clean from list
            organization.getLandlordDirectory().getlandlordList().remove(landlord);
            populatelandlordTable(organization);
            //remove this clean from userAccount so that the user couldn't log in
            UserAccount use = organization.getUserAccountDirectory().findUser(name);
            organization.getUserAccountDirectory().deleteUserAccount(use);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organizationCombox;
    private javax.swing.JTable organizationJTable;
    private javax.swing.JTextField txtSSN;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtlastname;
    private javax.swing.JTextField txtpassword;
    // End of variables declaration//GEN-END:variables
}
