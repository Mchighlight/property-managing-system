/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.PropertyCompany.leasing;


import Business.EcoSystem;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.SignLeaseRequest;
import Business.property.Lease;
import Business.property.Renewal;
import Business.property.Rent;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author junyaoli
 */
public class RenewalJPanel extends javax.swing.JPanel {

    /**
     * Creates new form customerServiceJPanel
     */
     JPanel userProcessContainer;
    UserAccount ua;
    EcoSystem ecosystem;
   
    public RenewalJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem business) {
         initComponents();
         this.ecosystem=business;
         this.ua = account;
         this. userProcessContainer = userProcessContainer;
         populateRequestTable();
    }

   public  String dateToString(Date date){
         DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");  
         String strDate = dateFormat.format(date);  
         return strDate ;
   }
    public boolean isExpired(Lease lease){
        Rent currentRent = lease.getRentList().get(lease.getRentList().size() -1 ) ;
        String rentalDate = this.dateToString(currentRent.getDate());
        String endDate = this.dateToString(lease.getEndDate());
        System.out.println(rentalDate);
        System.out.println(endDate);
        if( rentalDate.equals(endDate) )
            return true ;
        return false ;
    }
    
     public void populateRequestTable() {

        DefaultTableModel dtm = (DefaultTableModel) workRequestJTable.getModel();
        dtm.setRowCount(0);
        ArrayList<SignLeaseRequest> work = this.ua.getWorkQueue().getSignLeaseRequestList();

        if (work != null) {
            for (SignLeaseRequest s: work) {
                if( ( s.getStatus().equals("Payment Completed") ||  s.getStatus().equals("Renewal Request")  || s.getStatus().equals("Renewal Reviewing") )
               && this.isExpired(s.getLease()) ){
                    Object row[] = new Object[7];
                    row[0] = s.getOrderID();
                    row[1] = s.getTenant().getUsername();
                    row[2] = s.getBuilding().toString();
                    if ( s.getLease() == null )
                         row[3] = "Leasing in progress";
                    else
                        if( s.getLease().getBalance() == null )
                            row[3] = "Wating for Payment";
                        else
                            row[3] = s.getLease().toString();

                    row[4] = s.getStatus() ;
                
                    dtm.addRow(row);
                } // if
            } // for

        } else {
            JOptionPane.showMessageDialog(null, "null");
        }

    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        btnRequestRenewal = new javax.swing.JButton();
        btnRenewalReview = new javax.swing.JButton();
        btnViewDetail = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setLayout(null);

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "OrderId", "Tenant", "apartment", "Lease Balance", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable);

        add(jScrollPane2);
        jScrollPane2.setBounds(9, 52, 890, 230);

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel5.setText("Lease Collection");
        add(jLabel5);
        jLabel5.setBounds(340, 10, 170, 30);

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton);
        backJButton.setBounds(50, 20, 97, 29);

        btnRequestRenewal.setText("Request Renewal");
        btnRequestRenewal.setToolTipText("");
        btnRequestRenewal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestRenewalActionPerformed(evt);
            }
        });
        add(btnRequestRenewal);
        btnRequestRenewal.setBounds(150, 290, 144, 60);

        btnRenewalReview.setText("Renewal Review");
        btnRenewalReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRenewalReviewActionPerformed(evt);
            }
        });
        add(btnRenewalReview);
        btnRenewalReview.setBounds(360, 290, 180, 60);

        btnViewDetail.setText("View Detail");
        btnViewDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailActionPerformed(evt);
            }
        });
        add(btnViewDetail);
        btnViewDetail.setBounds(620, 290, 120, 60);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        add(jLabel4);
        jLabel4.setBounds(5, -4, 930, 710);
    }// </editor-fold>//GEN-END:initComponents

     public  Date getNextMonth(Date date){
          Calendar cal=Calendar.getInstance();
          cal.setTime(date);
          cal.set(Calendar.MONTH, date.getMonth()+1);
          Date dueDate = new Date(cal.getTimeInMillis());
         return dueDate ;
     } //    
    
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

     public static Date firstDayOfNextMonth() {
            LocalDateTime now = LocalDateTime.now();
            int year = now.getYear();
            int month = now.getMonthValue();
            int day = now.getDayOfMonth();  
            Calendar cal = Calendar.getInstance();
            cal.set(Calendar.YEAR, year);
            cal.set(Calendar.MONTH, month);
            cal.set(Calendar.DAY_OF_MONTH, 1);
            Date dueDate = new Date(cal.getTimeInMillis());
        return dueDate;
    }
    
    private Lease renewLease(SignLeaseRequest slr){
        Lease oldLease = slr.getLease();
        Lease lease = new Lease() ;
        // Lease Start  Day
        Date startDate = getNextMonth(oldLease.getEndDate()) ;
        lease.setStartDate(startDate);
        // EndDate
         Calendar cal=Calendar.getInstance();
        cal.setTime(startDate);
        cal.set(Calendar.MONTH,startDate.getMonth()+2);
        Date leaseEndDate =  cal.getTime() ;
        lease.setEndDate(leaseEndDate);
        // Info
        lease.setBalance(oldLease.getBalance());
        lease.setSecurityDeposit(Double.valueOf(oldLease.getSecurityDeposit()));
        lease.setBuilding(oldLease.getBuilding());
        lease.setTenant(slr.getTenant());
        lease.setLeasing(slr.getLeasing());
        lease.setRentList(oldLease.getRentList());
        lease.setRentalDate(startDate);
        // add Renewal List
        Renewal renewal = new Renewal();
        renewal.setRenewalDate(startDate);
        renewal.setRenwalID(String.valueOf(oldLease.getRenewalList().size()+1));
        ArrayList<Renewal> renewals = oldLease.getRenewalList() ;
        renewals.add(renewal);
        lease.setRenewalList(renewals);
        
        return lease ;
    }
    
    private void btnRequestRenewalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestRenewalActionPerformed
        // TODO add your handling code here:

        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            return;
        }
        int orderId = Integer.parseInt(workRequestJTable.getValueAt(row, 0).toString());
        String tenantName = workRequestJTable.getValueAt(row, 1).toString() ;
        SignLeaseRequest selectedSlr =  this.ua.getWorkQueue().findSignLeaseRequest(orderId) ;
        String status = workRequestJTable.getValueAt(row, 4).toString() ;
        if( status.equals("Payment Completed") ||  status.equals("Renewal Request") ){
            CardLayout layout =  (CardLayout)userProcessContainer.getLayout();
            userProcessContainer.add(new RenewalRequestJPanel( userProcessContainer,  ua,  ecosystem, selectedSlr) );
            layout.next(userProcessContainer);
        }//
        else{
            JOptionPane.showMessageDialog(null, "Your Leasing are not aprroved yet!", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnRequestRenewalActionPerformed

    private void btnRenewalReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRenewalReviewActionPerformed
        // TODO add your handling code here:

        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            return;
        }
        int orderId = Integer.parseInt(workRequestJTable.getValueAt(row, 0).toString());
        String tenantName = workRequestJTable.getValueAt(row, 1).toString() ;
        SignLeaseRequest selectedSlr =  this.ua.getWorkQueue().findSignLeaseRequest(orderId) ;
        String status = workRequestJTable.getValueAt(row, 4).toString() ;
        
            
        

         if( status.equals("Renewal Reviewing")   ){
            selectedSlr.setStatus("Payment Request");
            selectedSlr.setLease(this.renewLease(selectedSlr));
            JOptionPane.showMessageDialog(null, "Send the payment Request to Tenant ", "Info", JOptionPane.INFORMATION_MESSAGE);
        }//
        else{
            JOptionPane.showMessageDialog(null, "Tenant are not agreed to renew yet!", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
        populateRequestTable();
        
    }//GEN-LAST:event_btnRenewalReviewActionPerformed

    private void btnViewDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailActionPerformed
        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please selected the lease!", "Info", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        int orderId = Integer.parseInt(workRequestJTable.getValueAt(row, 0).toString());
        SignLeaseRequest selectedSlr =  this.ua.getWorkQueue().findSignLeaseRequest(orderId) ;
        String status = workRequestJTable.getValueAt(row, 4).toString() ;
        if( ! status.equals("Decline")  || ! status.equals("Contract preparation") ){
            CardLayout layout =  (CardLayout)userProcessContainer.getLayout();
            userProcessContainer.add(new DetailLeaseJPanel( userProcessContainer,  ua,  ecosystem, selectedSlr) );
            layout.next(userProcessContainer);
        }//
        else{
            JOptionPane.showMessageDialog(null, "Your Leasing are not aprroved yet!", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnViewDetailActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnRenewalReview;
    private javax.swing.JButton btnRequestRenewal;
    private javax.swing.JButton btnViewDetail;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
