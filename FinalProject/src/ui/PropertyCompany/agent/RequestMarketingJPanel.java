/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.PropertyCompany.agent;

import Business.EcoSystem;
import Business.Employee.Marketing;
import Business.Employee.Propority;
import Business.Employee.RealEstateAgent;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FurnishingRequest;
import Business.WorkQueue.MarketingRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import ui.InvestmentCompany.LandlordWorkAreaJPanel;

/**
 *
 * @author yiningchen
 */
public class RequestMarketingJPanel extends javax.swing.JPanel {

    private FurnishingRequest request;
    private UserAccount userAccount;
    private JPanel userProcessContainer;
    private EcoSystem ecosystem;

    /**
     * Creates new form RequestMarketingJPanel
     */
    public RequestMarketingJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.ecosystem = ecosystem;
        this.request = new FurnishingRequest();
        LandlordComboBox.removeAllItems();
        ArrayList<WorkRequest> work = userAccount.getWorkQueue().getWorkRequestList();
        if (work.equals(null)) {
            JOptionPane.showMessageDialog(null, "null");
        }

        for (WorkRequest request : work) {

            LandlordComboBox.addItem(request.getSender().getUsername());
        }

        for (Network network : ecosystem.getNetworkList()) {
            NetWorkCombobox.addItem(network.getName());

        }
    }

    public void populatEnterpriseCombo(String net) {
        EnterpriseCombobox.removeAllItems();
        for (Enterprise enterprise : ecosystem.findNetwork(net).getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise.getEnterpriseType().getValue().equals(Enterprise.EnterpriseType.RealEstate.getValue())) {
                EnterpriseCombobox.addItem(enterprise.getName());
            }

        }
    }

    public void populateproporityTable(String landlordname) {

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        ArrayList<WorkRequest> work = userAccount.getWorkQueue().getWorkRequestList();
        for (WorkRequest object : work) {
            if (object.getSender().toString() == landlordname) {
                UserAccount landlord = object.getSender();
                List<Propority> prolist = landlord.getLandlord().getProporityCatalog();
                if (prolist != null) {
                    for (Propority p : prolist) {
                        Object row[] = new Object[4];
                        row[0] = p.getNickname();
                        row[1] = p.getAddress();
                        row[2] = p.getAptNo();
                        row[3] = p.getSquareFeet();
                        model.addRow(row);
                    }

                }
            }

        }
    }

    public void populatmarketCombo() {
        AgentCombobox.removeAllItems();
        String network = NetWorkCombobox.getSelectedItem().toString();
        String enter = EnterpriseCombobox.getSelectedItem().toString();
        Enterprise enterprise1 = ecosystem.findNetwork(network).getEnterpriseDirectory().findenterprise(enter);
        Organization org = enterprise1.getOrganizationDirectory().findorganization("Marketing Organization");
        if (org.getRealEstateAgentDirectory().getRealEstateAgentList() != null) {
            for (Marketing market : org.getMarketingDirectory().getMarketingList()) {
                AgentCombobox.addItem(market.getName());
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        LandlordComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        AgentCombobox = new javax.swing.JComboBox<>();
        NetWorkCombobox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        EnterpriseCombobox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        backJButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nickname", "address", "Apt No", "sqtfeet"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(88, 181, 454, 160);

        LandlordComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        LandlordComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LandlordComboBoxActionPerformed(evt);
            }
        });
        add(LandlordComboBox);
        LandlordComboBox.setBounds(244, 52, 105, 30);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("Client:");
        add(jLabel1);
        jLabel1.setBounds(96, 52, 76, 30);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel2.setText("Property:");
        add(jLabel2);
        jLabel2.setBounds(88, 122, 106, 30);

        jButton3.setText("Request advertisement");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(592, 329, 187, 44);

        AgentCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgentComboboxActionPerformed(evt);
            }
        });
        add(AgentCombobox);
        AgentCombobox.setBounds(659, 265, 142, 18);

        NetWorkCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NetWorkComboboxActionPerformed(evt);
            }
        });
        add(NetWorkCombobox);
        NetWorkCombobox.setBounds(667, 158, 142, 27);

        jLabel4.setText("Network");
        add(jLabel4);
        jLabel4.setBounds(598, 162, 53, 16);

        jLabel5.setText("Enterprise");
        add(jLabel5);
        jLabel5.setBounds(598, 201, 63, 16);

        EnterpriseCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterpriseComboboxActionPerformed(evt);
            }
        });
        add(EnterpriseCombobox);
        EnterpriseCombobox.setBounds(673, 197, 136, 27);

        jLabel6.setText("Marketing");
        add(jLabel6);
        jLabel6.setBounds(578, 265, 63, 16);

        jButton4.setText("Find Marketing person");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4);
        jButton4.setBounds(596, 230, 205, 29);

        backJButton3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        backJButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-back-arrow-100.png"))); // NOI18N
        backJButton3.setToolTipText("");
        backJButton3.setBorderPainted(false);
        backJButton3.setContentAreaFilled(false);
        backJButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton3ActionPerformed(evt);
            }
        });
        add(backJButton3);
        backJButton3.setBounds(18, 20, 66, 62);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.jpg"))); // NOI18N
        jLabel7.setText("jLabel4");
        add(jLabel7);
        jLabel7.setBounds(5, -4, 930, 710);
    }// </editor-fold>//GEN-END:initComponents

    private void LandlordComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LandlordComboBoxActionPerformed
        // TODO add your handling code here:
        String landlord = (String) LandlordComboBox.getSelectedItem();
        if (landlord != null) {
            populateproporityTable(landlord);
        }


    }//GEN-LAST:event_LandlordComboBoxActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String network = NetWorkCombobox.getSelectedItem().toString();
        String enter = EnterpriseCombobox.getSelectedItem().toString();
        Enterprise enterprise = ecosystem.findNetwork(network).getEnterpriseDirectory().findenterprise(enter);
        Organization organization = enterprise.getOrganizationDirectory().findorganization("Marketing Organization");
        int row = jTable1.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "please select a row");
        }
        String propNickname = jTable1.getValueAt(row, 0).toString();

        String macketname = AgentCombobox.getSelectedItem().toString();
        UserAccount macaccount = organization.getUserAccountDirectory().findUser(macketname);

        String landlordname = (String) LandlordComboBox.getSelectedItem();
        ArrayList<WorkRequest> work = userAccount.getWorkQueue().getWorkRequestList();
        for (WorkRequest object : work) {
            if (object.getSender().toString() == landlordname) {
                UserAccount landlordaccount = object.getSender();
                if (macaccount != null) {
                    request.setSender(userAccount);
                    request.setReceiver(macaccount);
                    request.setStatus("Processing");
                    request.setCustomerAccount(landlordaccount);
                    request.setRequirement(propNickname);

                    userAccount.getWorkQueue().getFurnishingRequestList().add(request);
                    macaccount.getWorkQueue().getFurnishingRequestList().add(request);

                    JOptionPane.showMessageDialog(null, "assign successfully");
                }
            }
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void AgentComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgentComboboxActionPerformed
        // TODO add your handling code here:

        // populatchargefee();
    }//GEN-LAST:event_AgentComboboxActionPerformed

    private void NetWorkComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NetWorkComboboxActionPerformed
        // TODO add your handling code here:
        String network = NetWorkCombobox.getSelectedItem().toString();
        if (network != null) {
            populatEnterpriseCombo(network);
        }
    }//GEN-LAST:event_NetWorkComboboxActionPerformed

    private void EnterpriseComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterpriseComboboxActionPerformed

    }//GEN-LAST:event_EnterpriseComboboxActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        populatmarketCombo();
        jButton3.setEnabled(true);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void backJButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton3ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backJButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AgentCombobox;
    private javax.swing.JComboBox<String> EnterpriseCombobox;
    private javax.swing.JComboBox<String> LandlordComboBox;
    private javax.swing.JComboBox<String> NetWorkCombobox;
    private javax.swing.JButton backJButton3;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
