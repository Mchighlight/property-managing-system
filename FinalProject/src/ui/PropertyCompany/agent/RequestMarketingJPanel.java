/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.PropertyCompany.agent;

import Business.EcoSystem;
import Business.Employee.Marketing;
import Business.Employee.Propority;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FurnishingRequest;
import Business.WorkQueue.MarketingRequest;
import Business.WorkQueue.WorkRequest;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yiningchen
 */
public class RequestMarketingJPanel extends javax.swing.JPanel {

    private FurnishingRequest request;
    private UserAccount userAccount;
    private JPanel userProcessContainer;
    private EcoSystem ecosystem;

    /**
     * Creates new form RequestMarketingJPanel
     */
    public RequestMarketingJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.ecosystem = ecosystem;
        this.request = new FurnishingRequest();
        LandlordComboBox.removeAllItems();
        ArrayList<WorkRequest> work = userAccount.getWorkQueue().getWorkRequestList();
        if (work.equals(null)){
                    JOptionPane.showMessageDialog(null, "null");
        }
        for (WorkRequest request : work) {

            LandlordComboBox.addItem(request.getSender().getUsername());
        }
        // populatsenderCombo();
        //populatmarketCombo();
    }

    /* public void populatsenderCombo() {
        LandlordComboBox.removeAllItems();
        ArrayList<WorkRequest> work = userAccount.getWorkQueue().getWorkRequestList();
        for (WorkRequest request : work) {
            LandlordComboBox.addItem(request.getSender().getUsername());
        }

    }
     */
    public void populatmarketCombo() {
        LandlordComboBox1.removeAllItems();
        Enterprise enterprise = ecosystem.findNetwork("aa").getEnterpriseDirectory().findenterprise("realestate");
        Organization organization = enterprise.getOrganizationDirectory().findorganization("Marketing Organization");
        for (Marketing marketing : organization.getMarketingDirectory().getMarketingList()) {
            LandlordComboBox1.addItem(marketing.getName());
        }

    }

    public void populateproporityTable(String landlordname) {

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        Enterprise enterprise = ecosystem.findNetwork("henry").getEnterpriseDirectory().findenterprise("landlordAdmin1207");
        Organization organization = enterprise.getOrganizationDirectory().findorganization("BoardMember Organization");

        List<Propority> prolist = organization.getLandlordDirectory().findlandlord(landlordname).getProporityCatalog();

        if (prolist != null) {
            for (Propority p : prolist) {
                Object row[] = new Object[4];
                row[0] = p.getNickname();
                row[1] = p.getAddress();
                row[2] = p.getAptNo();
                row[3] = p.getSquareFeet();

                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        LandlordComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        LandlordComboBox1 = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nickname", "address", "Apt No", "sqtfeet"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        LandlordComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        LandlordComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LandlordComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("Client:");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel2.setText("Property:");

        jButton3.setText("Request advertisement");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        LandlordComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        LandlordComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LandlordComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel1)
                        .addGap(72, 72, 72)
                        .addComponent(LandlordComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LandlordComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(jButton3))
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(385, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(LandlordComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LandlordComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(108, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void LandlordComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LandlordComboBoxActionPerformed
        // TODO add your handling code here:
        String landlord = (String) LandlordComboBox.getSelectedItem();
        if (landlord != null) {
            populateproporityTable(landlord);
        }


    }//GEN-LAST:event_LandlordComboBoxActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Enterprise enterprise = ecosystem.findNetwork("aa").getEnterpriseDirectory().findenterprise("realestate");
        Organization organization = enterprise.getOrganizationDirectory().findorganization("Marketing Organization");

        int row = jTable1.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "please select a row");
        }
        String propNickname = jTable1.getValueAt(row, 0).toString();

        String macketname = LandlordComboBox1.getSelectedItem().toString();
        UserAccount macaccount = organization.getUserAccountDirectory().findUser(macketname);

        Enterprise enterprise1 = ecosystem.findNetwork("aa").getEnterpriseDirectory().findenterprise("investment");
        Organization organization1 = enterprise1.getOrganizationDirectory().findorganization("BoardMember Organization");
        String landlordname = (String) LandlordComboBox.getSelectedItem();
        UserAccount cusaccount = organization1.getUserAccountDirectory().findUser(landlordname);
        if (macaccount != null) {
            request.setSender(userAccount);
            request.setReceiver(macaccount);
            request.setStatus("Processing");
            request.setCustomerAccount(cusaccount);
            request.setRequirement(propNickname);

            userAccount.getWorkQueue().getFurnishingRequestList().add(request);
            organization.getUserAccountDirectory().findUser(macaccount.getUsername()).getWorkQueue().getFurnishingRequestList().add(request);

            JOptionPane.showMessageDialog(null, "assign successfully");
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void LandlordComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LandlordComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LandlordComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> LandlordComboBox;
    private javax.swing.JComboBox<String> LandlordComboBox1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
