/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.PropertyCompany.Marketing;

import Business.EcoSystem;
import Business.Employee.Landlord;
import Business.Employee.Propority;
import Business.Enterprise.Enterprise;
import Business.Organization.CustomerSupportOrganization;
import Business.Organization.FurnishingOrganization;
import Business.Organization.MarketingOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FurnishingRequest;
import Business.WorkQueue.MarketingRequest;
import Business.WorkQueue.WorkRequest;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mchig
 */
public class MarketingWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;

    private MarketingOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem ecosystem;

    /**
     * Creates new form TenantWorkAreaJPanel
     */
    public MarketingWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, MarketingOrganization marketingorganization, Enterprise enterprise, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.ecosystem = ecosystem;
        populateRequestTable();
    }

    public void populateRequestTable() {
        DefaultTableModel dtm = (DefaultTableModel) workRequestJTable.getModel();
        dtm.setRowCount(0);
        ArrayList<FurnishingRequest> work = userAccount.getWorkQueue().getFurnishingRequestList();

        if (work != null) {
            for (FurnishingRequest f : work) {

                Object row[] = new Object[5];
                row[0] = f.getOrderID();
                row[1] = f.getCustomerAccount().getUsername();
                row[2] = f.getSender();
                row[3] = f.getRequirement();
                row[4] = f.getStatus();

                dtm.addRow(row);
            }

        } else {
            JOptionPane.showMessageDialog(null, "null");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        btnaccept = new javax.swing.JButton();
        txtURL = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setLayout(null);

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "OrderID", "Customer", "Agent", "Property Nickname", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable);

        add(jScrollPane2);
        jScrollPane2.setBounds(141, 114, 576, 118);

        btnaccept.setText("Upload URL");
        btnaccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnacceptActionPerformed(evt);
            }
        });
        add(btnaccept);
        btnaccept.setBounds(272, 344, 116, 29);

        txtURL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtURLActionPerformed(evt);
            }
        });
        add(txtURL);
        txtURL.setBounds(272, 272, 211, 26);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel2.setText("Enter URL");
        add(jLabel2);
        jLabel2.setBounds(141, 272, 113, 30);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        add(jLabel4);
        jLabel4.setBounds(5, -4, 930, 710);
    }// </editor-fold>//GEN-END:initComponents

    private void btnacceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnacceptActionPerformed
        // TODO add your handling code here:
        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "please select a row");
        }
        String propertyname = workRequestJTable.getValueAt(row, 3).toString();

        String landlordname = workRequestJTable.getValueAt(row, 1).toString();
        userAccount.getWorkQueue().findFurnishingrequest(propertyname).setStatus("Marketing Finished");

        String URL = txtURL.getText();
        if (URL.equals("")) {
            JOptionPane.showMessageDialog(null, "input should not be null");
        } else {

            ArrayList<FurnishingRequest> work = userAccount.getWorkQueue().getFurnishingRequestList();
            for (FurnishingRequest object : work) {
                if (object.getCustomerAccount().toString() == landlordname) {
                    UserAccount landlordaccount = object.getCustomerAccount();
                    for (Propority propority : landlordaccount.getLandlord().getProporityCatalog()) {

                        if (propority.getNickname().equals(propertyname)) {
                            propority.setURL(URL);
                        }
                    }

                }
            }

            JOptionPane.showMessageDialog(null, "URL added", "Info", JOptionPane.INFORMATION_MESSAGE);
            populateRequestTable();
            txtURL.setText("");
        }
    }//GEN-LAST:event_btnacceptActionPerformed

    private void txtURLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtURLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtURLActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnaccept;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtURL;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
